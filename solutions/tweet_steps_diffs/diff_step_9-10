--- solutions/tweet_steps/tweet_step_9.js	2016-01-20 03:09:24.000000000 -0800
+++ solutions/tweet_steps/tweet_step_10.js	2016-01-20 03:09:32.000000000 -0800
@@ -12,15 +12,15 @@
       }.bind(this)
     );
   },
-  // handleTweetSubmit: function (author, text) {
-  //   var tweet = { author: author, text: text };
-  //
-  //   // POST to add tweet to database
-  //   $.post(this.props.url, tweet, function (data) {
-  //       // Set state in step 10 of the exercise!
-  //     }.bind(this)
-  //   );
-  // },
+  handleTweetSubmit: function (author, text) {
+    var tweet = { author: author, text: text };
+
+    // POST to add tweet to database
+    $.post(this.props.url, tweet, function (data) {
+        this.setState({ data: data });
+      }.bind(this)
+    );
+  },
   componentDidMount: function () {
     // Set this.state.data to most recent set of tweets from database
     this.loadTweetsFromServer();
@@ -29,7 +29,7 @@
     return (
       <div className="twitter">
         <h1>Tweets</h1>
-        <TweetForm />
+        <TweetForm onTweetSubmit={ this.handleTweetSubmit } />
         <TweetList data={ this.state.data } />
       </div>
     );
@@ -49,7 +49,9 @@
       return;
     }
 
-    alert('Send tweet data; author: ' + author + ', text: ' + text);
+    // Send new author and text up one level to Twitter component
+    // so updated tweets can be passed down again into TweetList component
+    this.props.onTweetSubmit(author, text);
 
     // Set input fields back to empty
     this.refs.author.value = '';
